version: '3.8'

services:
  # Registry Docker local
  registry:
    image: registry:2
    container_name: docker-registry
    ports:
      - "5000:5000"
    volumes:
      - registry_data:/var/lib/registry
    environment:
      REGISTRY_STORAGE_DELETE_ENABLED: "true"
    networks:
      - docker-lab

  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:13
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: labdb
      POSTGRES_USER: labuser
      POSTGRES_PASSWORD: labpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - docker-lab

  # Cache Redis
  redis:
    image: redis:6-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - docker-lab

  # Base NoSQL MongoDB
  mongodb:
    image: mongo:5
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db
    networks:
      - docker-lab

  # Application Node.js
  nodejs-app:
    build: 
      context: ./apps/nodejs-app
      dockerfile: Dockerfile
    container_name: nodejs-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://labuser:labpass@postgres:5432/labdb
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./apps/nodejs-app:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - docker-lab

  # Application Python Flask
  python-app:
    build:
      context: ./apps/python-app
      dockerfile: Dockerfile
    container_name: python-app
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://labuser:labpass@postgres:5432/labdb
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./apps/python-app:/app
    depends_on:
      - postgres
      - redis
    networks:
      - docker-lab

  # Application Go
  go-app:
    build:
      context: ./apps/go-app
      dockerfile: Dockerfile
    container_name: go-app
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=debug
      - DATABASE_URL=postgresql://labuser:labpass@postgres:5432/labdb
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./apps/go-app:/app
    depends_on:
      - postgres
      - redis
    networks:
      - docker-lab

  # Reverse Proxy Nginx
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - nodejs-app
      - python-app
      - go-app
    networks:
      - docker-lab

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - docker-lab

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - docker-lab

  # Monitoring - cAdvisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    networks:
      - docker-lab

volumes:
  registry_data:
  postgres_data:
  redis_data:
  mongodb_data:
  prometheus_data:
  grafana_data:

networks:
  docker-lab:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16